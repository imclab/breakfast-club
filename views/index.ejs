<!doctype html>
<html lang="en">
    <head>
        <title>LexiCube</title>
        <link rel="shortcut icon" type="image/ico" href="favicon.ico" />
        <link rel="stylesheet" href="stylesheets/cube.css" />
        <link rel="stylesheet" href="stylesheets/style.css" />
    </head>
    <body>
        <div class="topBar">
          <img id="lexiLogo" src="images/logo.png" />
          <iframe id="nodeVote" src="http://nodeknockout.com/iframe/breakfast-club" frameborder="0" scrolling="no" allowtransparency="true" width="115" height="25"></iframe>
        </div>
        
        <div id="wrapper">
        
          <div id="flipRight" class="foundicon-right-arrow"></div>
          <div id="flipLeft" class="foundicon-left-arrow"></div>
          <div id="flipUp" class="foundicon-up-arrow"></div>
          <div id="flipDown" class="foundicon-down-arrow"></div>
        
            <section id="threeDspace">
                <div id="cube">
                    <div class="face" id="front"></div>
                    <div class="face" id="back"></div>
                    <div class="face" id="right"></div>
                    <div class="face" id="left"></div>
                    <div class="face" id="top"></div>
                    <div class="face" id="bottom"></div>
                </div>
            </section>

            <section id="show-buttons">
              <button class="show-front">Show Front (1)</button>
              <button class="show-back">Show Back (2)</button>
              <button class="show-right">Show Right (3)</button>
              <button class="show-left">Show Left (4)</button>
              <button class="show-top">Show Top (5)</button>
              <button class="show-bottom">Show Bottom (6)</button>
            </section>
        </div>

        <div id="chat-window">
	        <div class="user-list">
				<b>Users</b>
				<div id="users"></div>
			</div>
			<div class="chat">
				<div id="conversation"></div>
				<input id="data" style="width:200px;" />
				<input type="button" id="datasend" value="send" />
			</div>
        </div>

        <script src="http://code.jquery.com/jquery.min.js"></script>
        <script src="scripts/cube.js"></script>
        <script src="http://localhost:3001/socket.io/socket.io.js"></script>
       	<script>
			var socket = io.connect('http://localhost:3001');
			var grid = [];

			// on connection to server, ask for user's name with an anonymous callback
			socket.on('connect', function(){
				// call the server-side function 'adduser' and send one parameter (value of prompt)
				socket.emit('adduser', prompt("What's your name?"));
			});

			// listener, whenever the server emits 'updatechat', this updates the chat body
			socket.on('updatechat', function (username, data) {
				$('#conversation').append('<b>'+username + ':</b> ' + data + '<br>');
			});

			// listener, whenever the server emits 'updateusers', this updates the username list
			socket.on('updateusers', function(data) {
				$('#users').empty();
				$.each(data, function(key, value) {
					$('#users').append('<div>' + key + '</div>');
				});
			});

			socket.on('updategrid', function(data) {
				$('#' + data.gameID).empty();
				grid = data.grid;
				console.log(grid);

				for (i=0; i < grid.length; i++) {
					if (grid[i].active === "active") {
						$('#' + data.gameID).append('<div class="square">' + grid[i].letter + '</div>');
					}
					else {
						$('#' + data.gameID).append('<div class="square black"></div>');
					}
				}
			});

			function getWord(square, direction){
				if ($(square).hasClass('black')){
					return null;
				}
				var word = {
					clue:'',
					squares: [],
					answer: ''
				}
				var face = $(square).parent();
				var allSquares = face.children();
				var index = $(square).index();
				console.log(index);
				if (direction == 'vertical'){
					while (index > 15){
						if ($(allSquares[index-15]).hasClass('black')){
							break;
						}else {
							index-=15;
						}
					}
					while(index < 240){
						word.squares.push(allSquares[index]);
						if ($(allSquares[index+15]).hasClass('black')){
							break;
						}else {
							index+=15;
						}
					}
				}else {
					var place = index % 15;
					var min = index - place;
					var max = index + (15-place);
					while (index > min){
						if ($(allSquares[index-1]).hasClass('black')){
							break;
						}else {
							index--;
						}
					}
					while(index < max){
						word.squares.push(allSquares[index]);
						if ($(allSquares[index+1]).hasClass('black')){
							break;
						}else {
							index++;
						}
					}
				}
				console.log(word.squares);
				return word;
			}
			// on load of page
			$(function(){
				// when the client clicks SEND
				$('#datasend').click( function() {
					var message = $('#data').val();
					$('#data').val('');
					// tell server to execute 'sendchat' and send along one parameter
					socket.emit('sendchat', message);
				});

				// when the client hits ENTER on their keyboard
				$('#data').keypress(function(e) {
					if(e.which == 13) {
						$(this).blur();
						$('#datasend').focus().click();
					}
				});
				$(document).on('click', '.square', function(){
					var direction = 'horizontal';
					if ($(this).hasClass('selected')){
						if ($(this).hasClass('horizontal')){
							direction = 'vertical';
						}
					}
					$('.selected').removeClass('selected');
					$('.horizontal').removeClass('horizontal');
					$('.vertical').removeClass('vertical');
					var word = getWord(this, direction);
					if (!word){
						return;
					}
					$(word.squares).addClass('selected').addClass(direction);
				});
			});
		</script>
    </body>
</html>